#!/bin/bash

init_term(){
  shopt -s checkwinsize; (:;:)
  ((ROWS=LINES-2))

  printf '\e[?1049h\e[?25l\e[?7l'
}

end(){
  printf '\e[?1049l\e[?25h\e[?7h'
  exit
}

push(){ STACK=("$@" "${STACK[@]}"); }

read_keys(){
  read -rsn 1
  [[ $REPLY == $'\e' ]]&& read -rsn 2
  KEY="${REPLY,,}"
}

get_files(){
  unset STACK

  CURSOR="$ROWS"

  for _ in *; do
    if [[ -h $_ ]]; then push "\e[36m$_\e[m@"
    elif [[ -d $_ ]]; then push "\e[34m$_\e[m/"
    elif [[ -x $_|| $_ =~ \.(ba)?sh ]]; then push "\e[32m$_\e[m*"
    else push "\e[39m$_\e[m"; fi
  done
  
  (( NO_COLOR ))&&{ STACK=("${STACK[@]/#\\e[3?m/\\e[39m}") NO_COLOR='FML'; }

  draw_files
}

draw_files(){
  unset hoverHist i

  printf '\e[2J\e[%dH' "$ROWS"
  printf '\e[2m%b\n' "${STACK[@]}"
  echo
}

draw_bar(){
  printf '\e[%dH\e[2K%s %b%s\e[A\r%b\e[m %b' \
    "$LINES" "${controls:-[<]back [>]open}" "$HOVER" "$status" \
    "${NO_COLOR:-\e[2;30;44;4mFML}" "$rawSelected"
}

hover_files(){
  HOVER="${STACK[$1-(ROWS+1)]}"
  printf '\e[%dH\e[7m%b' "$1" "$HOVER"

  (( ${#STACK[@]}-1 ))&&{
    hoverHist+=("\e[${1}H$HOVER")
    if (( i )); then
      printf '%b' "${hoverHist[0]}"
      hoverHist=("${hoverHist[@]:1}")
    else
      i=1
    fi
  }
}

scroll_buffer(){
  if (( ${#STACK[@]} > $1 )); then
    if (( CURSOR > $1 )); then
      CURSOR=1
      local popped=("${STACK[@]:0:$1}")
      STACK=("${STACK[@]:$1}" "${popped[@]}")

      draw_files
    elif (( CURSOR < 1 )); then
      CURSOR="$1"
      local popped=("${STACK[@]:(-$1)}")
      STACK=("${popped[@]}" "${STACK[@]::${#STACK[@]}-$1}")

      draw_files
    fi
  else
    if (( CURSOR > $1 )); then
      ((CURSOR=$1-(${#STACK[@]}-1)))
    elif (( CURSOR < $1-(${#STACK[@]}-1) )); then
      CURSOR="$1"
    fi
  fi
}

open_dir(){ cd "$1"; get_files; }

open_file(){
  grep -qI . "$1"||{ PAUSE=1; return; }
  mapfile -tn 1000 <"$1"

  printf '\e[?1049l\e[2J\e[3J\e[?7l\e[H'
  printf '%s\n' "${MAPFILE[@]}"
  echo

  status=": ${#MAPFILE[@]} lines"

  draw_bar

  for((;;)){
    read_keys
    case $KEY in
      q) end;;
      h|\[d) break;;
      l|\[c) "${EDITOR:-${VISUAL:-vim}}" "$1"; printf '\e[?25l';;
    esac
  }

  unset status

  printf '\e[2J\e[?1049h'
  draw_files
}

open_selected(){
  rawSelected="$PWD/$HOVER"
  : "${HOVER#\\e[3?m}"; selected="${_%\\e*}"

  if [[ -d $selected ]]; then open_dir "$selected"
  elif [[ -f $selected ]]; then open_file "$selected"; fi
}

trap 'init_term; get_files' WINCH
trap end INT EXIT

init_term
get_files
for((;;)){
  (( PAUSE ))||{
    hover_files "$CURSOR"
    draw_bar
  }; PAUSE=0

  read_keys
  case $KEY in
    q) end;;
    h|\[d) cd ../; get_files;;
    j|\[b) ((CURSOR++));;
    k|\[a) ((CURSOR--));;
    l|\[c) open_selected;;
    *) PAUSE=1;;
  esac

  scroll_buffer "$ROWS"
}
